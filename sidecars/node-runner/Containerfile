# syntax=docker/dockerfile:1
ARG NODE_VERSION=20
FROM docker.io/node:${NODE_VERSION}-bookworm-slim

RUN apt-get update \
  && apt-get install -y --no-install-recommends \
    git curl ca-certificates gnupg ssh-client less psmisc jq time man manpages zsh \
    sudo locales fakeroot libpcre3 \
    build-essential ccache cmake cmake-format distcc zlib1g-dev libzlcore-dev libffi-dev libssl-dev libyaml-dev \
  && sed -i '/en_US.UTF-8/s/^# //' /etc/locale.gen \
  && locale-gen \
  && echo 'export PATH="${HOME}/.npm-global/bin:${PATH}"' > /etc/profile.d/global-npm-bins-path \
  && rm -rf /var/{cache,lib}/apt


ENV COREPACK_ENABLE_DOWNLOAD_PROMPT=0
ARG NODE_OPTIONS="--no-network-family-autoselection --trace-warnings"

ARG UID=1000
ARG GID=1000
ARG SHELL=/usr/bin/zsh
# if UID differs from default: create new user/group; take over /home/node
RUN  bash -c "[ ${GID} != \"1000\" ] && groupadd -g ${GID} -U node userz || true" \
  && bash -c "[ ${UID} != \"1000\" ] && useradd -u ${UID} -g ${GID} -s ${SHELL} -d /home/node user && chown -R ${UID}:${GID} /home/node || true" \
  && usermod -G sudo -a $(id -un ${UID}) \
  && echo '%sudo ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers

WORKDIR /tmp/
COPY sidecars/node-runner/package.json \
     sidecars/node-runner/package-lock.json \
     .
RUN npm ci --omit=dev --ignore-scripts \
  && mv node_modules/* node_modules/.bin /usr/local/lib/node_modules/

####
USER ${UID}:${GID}
ENV HOME=/home/node
# fix broken ipv6 on nodejs v20
ARG NODE_OPTIONS="--no-network-family-autoselection --trace-warnings"
ENV NODE_OPTIONS="${NODE_OPTIONS}"
ENV NPM_CONFIG_PREFIX=/home/node/.npm-global

WORKDIR /tmp

COPY sidecars/node-runner/install-package-managers.sh .
ARG COREPACK_PMS='yarn@1.22.22 yarn@3 yarn@4 npm@7 npm@9 npm@10 pnpm@9'
RUN ./install-package-managers.sh \
  && mkdir -p /home/node/.corepack/bin \
  # `corepack enable` determines shim installation path based on `which corepack` directory
  && ln -s /usr/local/bin/corepack /home/node/.corepack/bin/ \
  && PATH=/home/node/.corepack/bin/:${PATH} corepack enable \
  # ensure ownership
  && mkdir -p /home/node/.cache /home/node/.yarn/berry /home/node/.npm

ENV SHELL=${SHELL}

COPY contrib/l*-scripts/bin/*      /usr/local/bin/

COPY --chown=${UID}:${GID} skel/ /home/node/

ENV PATH=/home/node/.corepack/bin:${PATH}

WORKDIR /src
ENTRYPOINT ["/bin/bash"]
