logging:
  logs:
    default:
      level: INFO

# root cert is generated in image build
#auto_https: disable_certs
apps:
  http:
    servers:
      acngs:
        listen:
          - ":3143"
        automatic_https:
          disable: false
        routes:
          - match:
            - host:
              - 'registry.npmjs.com'
              - 'registry.npmjs.org'
              - 'registry.yarnpkg.com'
              - 'registry.npmmirror.com'
              path_regexp:
                pattern: '^/-/[^/]*/v[0-9]*/security/(advisories|audits)/'
              header:
                'Npm-Command':
                  - audit
            handle:
              - handler: reverse_proxy
                upstreams:
                  - dial: 'registry.npmjs.org:443'
                transport:
                  protocol: http
                  tls:
                    server_name: 'registry.npmjs.org'
                    renegotiation: once
            terminal: true
            group: pkgs
          - match:
            - header:
                'Npm-Command':
                  - login
                  - adduser
            - path:
              - '/-/v1/login'
              host:
              - 'registry.npmjs.org'
              - 'registry.yarnpkg.com'
              - 'registry.npmmirror.com'
            - not:
              - method:
                - GET
              host:
              - 'registry.npmjs.org'
              - 'registry.yarnpkg.com'
              - 'registry.npmmirror.com'
            handle:
              - handler: static_response
                status_code: '405'
                body: 'Read-only mirror'
            terminal: true
          - match:
            - method:
              - GET
              host:
              - 'registry.npmjs.org'
              - 'registry.yarnpkg.com'
              - 'registry.npmmirror.com'
            handle:
              - handler: rewrite
                uri: '{http.request.host}{http.request.uri}/'
              - handler: rewrite
                path_regexp:
                  - find: '[^/]$'
                    replace: '$0/'
                  - find: '(\.t?gz)/$'
                    replace: '$1'
              - handler: reverse_proxy
                upstreams:
                  - dial: '{env.PKG_PROXY_HOST}:{env.PKG_PROXY_PORT}'
            terminal: true
            group: pkgs
          - match:
            handle:
              - handler: rewrite
                uri: '{http.request.host}{http.request.uri}'
              - handler: reverse_proxy
                upstreams:
                  - dial: '{env.PKG_PROXY_HOST}:{env.PKG_PROXY_PORT}'
            terminal: true
            group: pkgs
      http:
        listen:
          - ":80"
        automatic_https:
          disable: true
        routes:
          - match:
              - host:
                  - deb.debian.org
                  - dl-cdn.alpinelinux.org
                  - registry.npmjs.com
                  - registry.npmjs.org
                  - registry.yarnpkg.com
                  - registry.npmmirror.com
                  - archive.ubuntu.com
                  - security.ubuntu.com
            handle:
              - handler: reverse_proxy
                upstreams:
                  - dial: '{env.PKG_PROXY_HOST}:{env.PKG_PROXY_PORT}'
                transport:
                  protocol: http
                  versions: ['1.1']
            terminal: true
          - match:
              - host:
                  - 'github.com'
                  - '*.github.com'
                  - 'ghcr.io'
                  - '*.ghcr.io'
            handle:
              - handler: reverse_proxy
                # proxy_protocol: v2
                upstreams:
                  - dial: '{env.GITHUB_PROXY_HOST}:{env.GITHUB_PROXY_PORT}'
            terminal: true
          - handle:
              - handler: reverse_proxy
                upstreams:
                  - dial: '{http.request.host}:80'
                transport:
                  protocol: http
                  versions: ['1.1']
            terminal: true

  layer4:
    servers:
      ssh:
        listen:
          - ":22"
        routes:
          - match:
              - ssh: {}
            handle:
              - handler: proxy
                upstreams:
                  - dial:
                      - "github.com:22"

      http_acng_passthrough:
        listen:
         - ":3142"
        routes:
          - handle:
              - handler: proxy
                upstreams:
                  - dial:
                    - "#{ $PKG_PROXY_HOST }:#{ $PKG_PROXY_PORT }"
      https:
        listen:
         - ":443"
        routes:
          - match:
             - tls:
                 sni:
                   - npmpkg.internal
                   - verdaccio
                   - verdaccio.internal
            handle:
              - handler: tls
              - handler: proxy
                upstreams:
                  - dial:
                    - "#{ $NPMPKG_REGISTRY_HOST }:#{ $NPMPKG_REGISTRY_PORT }"
          - match:
             - tls:
                 sni:
                   - registry.npmjs.com
                   - registry.npmjs.org
                   - registry.yarnpkg.com
                   - registry.npmmirror.com
                   - deb.debian.org
                   - dl-cdn.alpinelinux.org
                   - archive.ubuntu.com
                   - security.ubuntu.com
                   # todo
                   #- mirrors.fedoraproject.org
            handle:
              - handler: tls
                connection_policies:
                  - alpn:
                    - http/1.0
                    - http/1.1
                    #- http/2
              # todo: implement invoke in layer4, or figure why dial to acng isn't working directly here
              # https://caddyserver.com/docs/json/apps/http/servers/routes/handle/invoke/
              #- handler: invoke
              #  name: something-acng
              - handler: proxy
              #  # proxy_protocol: v2
                upstreams:
                  - dial:
                    - 127.0.0.1:3143
                    tls:
                      renegotiation: once
                    #  use_client_config: false
                    ##- 127.0.0.1:3142
                    # working except url part
                    #- "#{ $PKG_PROXY_HOST }:#{ $PKG_PROXY_PORT }"
          #TODO: caching for static content
          - match:
             - tls:
                alpn:
                  - http/1.0
                  - http/1.1
                  - http/2
                sni:
                  - 'codeload.github.com'
                  - 'raw.githubusercontent.com'
            handle:
             - handler: tls
               connection_policies:
                - alpn:
                  - http/1.0
                  - http/1.1
                  - http/2
             - handler: proxy
               upstreams:
                 - dial:
                     - "{l4.tls.server_name}:443"
                   tls:
                     renegotiation: once
                     use_client_config: false
                     #next_protos:
                     #  - http/1.1
          # git-auth-proxy intercept github.com
          # TODO: caching for releases and packages
          - match:
              - tls:
                  sni:
                    - 'github.com'
                    - '*.github.com'
                    - 'ghcr.io'
                    - '*.ghcr.io'
                # restrict access to authorized endpoint
                ip:
                  ranges:
                    - 10.7.8.0/27
            handle:
              - handler: tls
                connection_policies:
                  - alpn:
                    - http/1.0
                    - http/1.1
                    - http/2
              - handler: proxy
                # proxy_protocol: v2
                upstreams:
                  - dial:
                    - "#{ $GITHUB_PROXY_HOST }:#{ $GITHUB_PROXY_PORT }"
                    #tls:
                    #  renegotiation: once
          - handle:
              - handler: tls
                connection_policies:
                  - alpn:
                    - http/1.0
                    - http/1.1
                    - http/2
              - handler: proxy
                upstreams:
                  - dial:
                      - "{l4.tls.server_name}:443"
                    tls:
                      renegotiation: once
                      use_client_config: false
                      #next_protos:
                      #  - http/1.1
  tls:
    certificates:
      automate:
        - "*"
    # https://caddyserver.com/docs/json/apps/tls/automation/policies/
    automation:
      policies:
        - on_demand: true
          # storage: ...
          reuse_private_keys: true
          issuers:
            - module: internal

#auto_https: disable_certs
