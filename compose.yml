---
services:
  dev-shell:
    profiles:
      - dev
    depends_on:
      - container-socket-proxy
      - dns
      - http-proxy
    build:
      context: .
      dockerfile: Containerfile.nvim
    image: 'localhost/l7/nvim:latest'
    hostname: dev
    restart: always
    user: '1000:1000'
    userns_mode: 'keep-id:uid=1000,gid=1000'
    networks:
      internal:
      container-control:
    working_dir: "${SRC_DIR:-${L7_SRC_DIR:-/src}}"
    # TODO: mounts for config could be done as configs
    # https://github.com/compose-spec/compose-spec/blob/master/08-configs.md
    volumes:
      - '${CONF_DIR:-${HOME}/.config/l7ide/config}/ssh.d:/home/user/.ssh/config.d:ro'
      - '${CONF_DIR:-${HOME}/.config/l7ide/config}/git:/home/user/.config/git:ro'
      - '${SRC_DIR:-${L7_SRC_DIR:-${PWD}}}:${SRC_DIR:-${L7_SRC_DIR:-${PWD}}}:rshared,nosuid'
      - '${SRC_DIR:-${L7_SRC_DIR:-${PWD}}}:/src:rshared,nosuid'
      - '${LOCAL_DIR:-l7_dev_user_local}:/home/user/.local'
      - 'nvim_state:/home/user/.local/state/nvim:z'
      - 'cache_node_yarn_berry:/home/node/.yarn/cache/berry:z,ro'
      - 'cache_node_yarn_classic:/home/node/.cache/yarn:z,ro'
      - 'cache_node_pnpm:/home/node/.cache/pnpm:z,ro'
      - 'cache_node_npm:/home/node/.npm/_cacache:z,ro'
      - target: /tmp
        type: tmpfs
        tmpfs:
          size: 2G
          mode: 0777
      - '${SSH_SOCKET:-${SSH_AUTH_SOCK:-/dev/null}}:${HOME}/.ssh/SSH_AUTH_SOCK'
    env_file:
      - path: env
        required: false
      - path: "${HOME}/.config/l7ide/config/env"
        required: false
    environment:
      CONTAINER_HOST:    'tcp://10.7.9.2:2375'
      GO_RUNNER_IMAGE:   'localhost/l7/go:1.20-bookworm'
      GPG_IMAGE:         'localhost/l7/gpg-vault:pk'
      NODE_RUNNER_IMAGE: 'localhost/l7/node'
      L7_NODE_VERSION:   '20'
      HOME:    /home/user
      SRC_DIR: '${SRC_DIR:-${L7_SRC_DIR:-/src}}'
      L7_NVIM_STATE_PATH:  'l7_nvim_state'
      L7_NPM_CACHE_VOLUME:  'l7_cache_node_npm'
      L7_PNPM_CACHE_VOLUME: 'l7_cache_node_pnpm'
      L7_YARN_BERRY_CACHE_VOLUME:   'l7_cache_node_yarn_berry'
      L7_YARN_CLASSIC_CACHE_VOLUME: 'l7_cache_node_yarn_classic'
      GPG_PK_VOLUME: 'l7_gpgvault_pk'
      L7_COMPOSE_NETWORK_NAME_INTERNAL: 'l7_dev_internal'
    dns: 10.7.8.133
    entrypoint: /bin/sh
    command: -c 'sleep 36000000000'
    tty: true

#########################################################

  container-socket-proxy:
    build:
      context: sidecars/container-socket-proxy
      dockerfile: Dockerfile
    image: 'localhost/l7/container-socket-proxy:latest'
    networks:
      container-control:
        ipv4_address: 10.7.9.2
    env_file: compose/container-socket-proxy.env
    # TODO: Fix SElinux privileges of podman socket such that privileged-workaround for proxy not needed
    privileged: true
    volumes:
      - ${CONTAINER_SOCKET:-${XDG_RUNTIME_DIR}/podman/podman.sock}:/var/run/docker.sock:Z
      #- /run/user/${UID}/podman/podman.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    tmpfs:
      - /run

  auth-proxy:
    build:
      context: sidecars/git-auth-proxy
      dockerfile: Dockerfile
    image: 'localhost/l7/auth-proxy:latest'
    networks:
      svcs:
        ipv4_address: 10.7.7.135
      public:
    ports:
      - '18774:8080'
    volumes:
      - ${HOME}/.config/l7ide/config/git-auth-proxy:/etc/git-auth-proxy:Z,ro
    command:
      - --config
      - /etc/git-auth-proxy/config.json
      - --addr
      - '0.0.0.0:8080'

  dns:
    build:
      context: sidecars/dnsmasq
      dockerfile: Containerfile
    image: 'localhost/l7/dnsmasq:latest'
    ports:
      - '18753:53/tcp'
      - '18753:53/udp'
      #- '18767:67/udp'
      #- '18769:69/udp'
    cap_add:
      - NET_ADMIN
    # todo: dynamic for subnets
    command: '--address="/#/10.7.8.132" --log-facility=-'
    networks:
      internal:
        ipv4_address: 10.7.8.133
      svcs:
        ipv4_address: 10.7.7.133
      public:

  # package cache
  apt-cacher-ng:
    build:
      context: sidecars/apt-cacher-ng
      dockerfile: Containerfile
    image: 'localhost/l7/apt-cacher-ng:latest'
    restart: always
    init: true
    #command: 'apt-cacher-ng -v PassThroughPattern=.*'
    #cap_drop:
    #  - all
    networks:
      svcs:
        ipv4_address: 10.7.7.136
    ports:
    - '13142:13142'
    volumes:
    - ${HOME}/.local/share/l7ide/apt-cacher-ng/cache:/var/cache/apt-cacher-ng:Z
    - ${HOME}/.local/share/l7ide/apt-cacher-ng/log:/var/log/apt-cacher-ng:Z

  http-proxy:
    depends_on:
      - apt-cacher-ng
      - auth-proxy
      - dns
    build:
      context: sidecars/caddy
      dockerfile: Containerfile
    image: 'localhost/l7/caddy:latest'
    environment:
      GITHUB_PROXY_HOST: 10.7.7.135
      GITHUB_PROXY_PORT: '8080'
      PKG_PROXY_HOST: 10.7.7.136
      PKG_PROXY_PORT: '13142'
    networks:
      internal:
        ipv4_address: 10.7.8.132
      svcs:
        ipv4_address: 10.7.7.132
      public:
    volumes:
      - 'caddy_conf:/config:Z,ro'
      #- ./sidecars/caddy/default.yml:/etc/caddy/default.yml:ro
    tmpfs:
      - /data/caddy/certificates
      - /data/caddy/pki

volumes:
  user_local:
    name: l7_dev_user_local
  caddy_conf:
    name: l7_caddy_fwd_config
  cache_node_npm:
    name: l7_cache_node_npm
  cache_node_pnpm:
    name: l7_cache_node_pnpm
  cache_node_yarn_berry:
    name: l7_cache_node_yarn_berry
  cache_node_yarn_classic:
    name: l7_cache_node_yarn_classic
  nvim_state:
    name: l7_nvim_state
  gpgvault_pk:
    name: l7_gpgvault_pk

networks:
  svcs:
    attachable: false
    ipam:
      config:
        - subnet: 10.7.7.0/24
    driver: bridge
    driver_opts:
      inhibit_ipv4: 1
  internal:
    name: l7_dev_internal
    attachable: true
    ipam:
      config:
        - subnet: 10.7.8.0/24
          ip_range: 10.7.8.0/27
    driver: bridge
    driver_opts:
      inhibit_ipv4: 1
      disable_dns: 1
  container-control:
    name: l7_dev_container_control
    attachable: true
    ipam:
      config:
        - subnet: 10.7.9.0/29
          ip_range: 10.7.9.4/30
    driver: bridge
    driver_opts:
      inhibit_ipv4: 1
      disable_dns: 1
  # has external network gateway = internet access
  public:
    attachable: false
    driver: bridge
