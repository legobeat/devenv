#!/bin/bash
# proxy command to run in ephemeral sibling container
# expects a container engine socket on $CONTAINER_HOST

RUNNER_IMAGE="$1"
COMMAND="$2"
ARGS="${@:3}"

[[ -n "$DEBUG" ]] && set -x

if [ -n "${RUNNER_ENV}"  ]; then
  for e in ${RUNNER_ENV}; do
    export RUNNER_OPTS="${RUNNER_OPTS} -e ${e}"
  done
fi
if [ -n "${RUNNER_PORTS}"  ]; then
  for ports in ${RUNNER_PORTS}; do
    export RUNNER_OPTS="${RUNNER_OPTS} -p ${ports}"
  done
fi
if [ -n "${RUNNER_VOLS}"  ]; then
  for vol in ${RUNNER_VOLS}; do
    export RUNNER_OPTS="${RUNNER_OPTS} -v ${vol}"
  done
fi

# remove any GITHUB_TOKEN, NPM_TOKEN, etc from env vars automatically propagated
for tokenvar in $(env | cut -d= -f1 | grep -i _token); do
  echo "Removing potentially sensitive env var ${tokenvar} from process. You can set it explicitly via RUNNER_ENV".
  unset "${tokenvar}";
done

sudo --preserve-env=CONTAINER_HOST,container \
  podman run --rm -it \
  --user "$(id -u):$(id -g)" --userns=keep-id:uid=$(id -u),gid=$(id -g) \
  -e NODE_OPTIONS="${NODE_OPTIONS}" \
  -e '*' \
  -v "${SRC_DIR}:${SRC_DIR}" -v "${SRC_DIR}:/src" -w "${PWD}" \
  ${RUNNER_OPTS} \
  --entrypoint "${COMMAND}" -- $RUNNER_IMAGE ${ARGS}
