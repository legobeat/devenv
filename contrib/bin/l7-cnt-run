#!/bin/bash
# proxy command to run in ephemeral sibling container
# expects a container engine socket on $CONTAINER_HOST

if [[ -n "$DEBUG" ]]; then
  set -x
  env
  ls -la /home
  ls -la /home/*
fi

RUNNER_IMAGE="${RUNNER_IMAGE:-${NODE_RUNNER_IMAGE:-localhost/l7/node:20-bookworm}}"

if [[ "$(basename $0)" = "l7-cnt-run" ]]; then
  COMMAND="$1"
  ARGS="${@:2}"
else
  COMMAND="$(basename $0)"
  ARGS="${@}"
fi

# replace newlines with spaces
RUNNER_ENV="${RUNNER_ENV//@@ /$'\n'}"
RUNNER_PORTS="${RUNNER_PORTS//@@ /$'\n'}"
RUNNER_VOLS="${RUNNER_VOLS//@@ /$'\n'}"
if [ -n "${RUNNER_ENV}"  ]; then
  for e in ${RUNNER_ENV}; do
    export RUNNER_OPTS="${RUNNER_OPTS} -e ${e}"
  done
fi
if [ -n "${RUNNER_PORTS}"  ]; then
  for ports in ${RUNNER_PORTS}; do
    export RUNNER_OPTS="${RUNNER_OPTS} -p ${ports}"
  done
fi
if [ -n "${RUNNER_VOLS}"  ]; then
  for vol in ${RUNNER_VOLS}; do
    export RUNNER_OPTS="${RUNNER_OPTS} -v ${vol}"
  done
fi

# remove any GITHUB_TOKEN, NPM_TOKEN, etc from env vars automatically propagated
for tokenvar in $(env | cut -d= -f1 | grep -i _token); do
  [[ -n "${DEBUG}" ]] && echo "Removing potentially sensitive env var ${tokenvar} from process. You can set it explicitly via RUNNER_ENV."  >&2
  unset "${tokenvar}";
done

# detect tty
if [ -t 1 ] ; then
  RUNNER_OPTS="${RUNNER_OPTS} -t "
fi
if [[ "${L7_DISABLE_SELINUX}" == "1" ]]; then
  RUNNER_OPTS="${RUNNER_OPTS} --security-opt=label=disable -e L7_DISABLE_SELINUX=1"
fi

podman run --pull=never --rm \
  --user 1000:1000 --userns=keep-id:uid=1000,gid=1000 \
  -e '*' \
  --network "${L7_COMPOSE_NETWORK_NAME_INTERNAL}" \
  -v "${SRC_DIR}:${SRC_DIR}" -v "${SRC_DIR}:/src" -w "${PWD}" \
  -v "${L7_RESOLV_CONF_PATH}:/etc/resolv.conf:ro,z" \
  ${RUNNER_OPTS} \
  --entrypoint "${COMMAND}" -- $RUNNER_IMAGE ${ARGS}
